&НаКлиенте
Перем git;

&AtClientAtServerNoContext
Function JsonLoad(Json) Export
	
	JSONReader = New JSONReader;
	JSONReader.SetString(Json);
	Value = ReadJSON(JSONReader);
	JSONReader.Close();
	Return Value;
	
EndFunction

&AtClientAtServerNoContext
Function JsonDump(Value) Export
	
	JSONWriter = New JSONWriter;
	JSONWriter.SetString();
	WriteJSON(JSONWriter, Value);
	Return JSONWriter.Close();
	
EndFunction

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Отказ = Истина;
	МассивФайлов = Новый Массив;
	МассивФайлов.Добавить(ВременнаяПапка);
	ВладелецФормы.OpenFolderEnd(МассивФайлов, Undefined);
	Сообщить(ВременнаяПапка);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПустаяСтрока(НСтр(СтрокаСоединенияИнформационнойБазы(), "File")) Тогда
		ВызватьИсключение "Автоматизированное тестирование доступно только для файлового варианта работы платформы 1С:Предприятие";
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ФайлОбработки = Новый Файл(ОбработкаОбъект.ИспользуемоеИмяФайла);
	ТекущийКаталог = ФайлОбработки.Путь;
	
	ИдентификаторКомпоненты = "_" + StrReplace(New UUID, "-", "");
	ПодключитьВнешнююКомпоненту(Параметры.AddInURL, ИдентификаторКомпоненты, ТипВнешнейКомпоненты.Native);
	git = Новый("AddIn." + ИдентификаторКомпоненты + ".GitFor1C");
	
	ИмяФайла = "Autotest";
	ВременнаяПапка = ПолучитьИмяВременногоФайла("git");
	УдалитьФайлы(ВременнаяПапка);
	СоздатьКаталог(ВременнаяПапка);
	ВременнаяПапка = ВременнаяПапка + "/" + ИмяФайла + "/";
	СоздатьКаталог(ВременнаяПапка);
	СоздатьКаталог(ВременнаяПапка + "include");
	СоздатьКаталог(ВременнаяПапка + "Empty");
	СоздатьКаталог(ВременнаяПапка + "Example");
	СоздатьКаталог(ВременнаяПапка + "Example/Features");
	СоздатьКаталог(ВременнаяПапка + "Example/Forms");
	СоздатьКаталог(ВременнаяПапка + "Example/Forms/Test");
	СоздатьКаталог(ВременнаяПапка + "Example/Forms/Test/Ext");
	СоздатьКаталог(ВременнаяПапка + "Example/Forms/Test/Ext/Form");
	СоздатьКаталог(ВременнаяПапка + "src");
	СоздатьКаталог(ВременнаяПапка + "tools");
	
	МассивФайлов = Новый Массив;
	МассивФайлов.Добавить("LICENSE");
	МассивФайлов.Добавить("Example.xml");
	МассивФайлов.Добавить("Example/Features/НажатиеМыши.feature");
	МассивФайлов.Добавить("include/ComponentBase.h");
	МассивФайлов.Добавить("include/types.h");
	МассивФайлов.Добавить("src/AddInNative.cpp");
	МассивФайлов.Добавить("src/AddInNative.h");
	МассивФайлов.Добавить("src/json.hpp");
	МассивФайлов.Добавить("tools/Compile.os");
	МассивФайлов.Добавить("tools/Decompile.os");
	
	git.init(ВременнаяПапка);
	Для каждого ИмяФайла Из МассивФайлов Цикл
		КопироватьФайл(ТекущийКаталог + ИмяФайла, ВременнаяПапка + ИмяФайла);
	КонецЦикла;
	git.add(JsonDump(МассивФайлов));
	
	ПодписьПоУмолчанию = JsonLoad(git.signature);
	Если Не ПодписьПоУмолчанию.success Тогда
		git.SetAuthor("Test User", "user@mail.com");
		git.SetCommitter("Test Committer", "committer@mail.com");
	КонецЕсли;
	git.commit("Инициализация");
	git.checkout("develop", True);
	
	ИмяФайла = "tools/Decompile.os";
	ПолноеИмя = ВременнаяПапка + ИмяФайла;
	УдалитьФайлы(ПолноеИмя);
	
	ИмяФайла = "Example.xml";
	ПолноеИмя = ВременнаяПапка + ИмяФайла;
	УдалитьФайлы(ПолноеИмя);
	git.remove(ИмяФайла);
	
	ИмяФайла = "tools/Compile.os";
	ПолноеИмя = ВременнаяПапка + ИмяФайла;
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ПолноеИмя, КодировкаТекста.UTF8);
	Для НомерСтроки = 1 По 4 Цикл
		Стр = ТекстовыйДокумент.ПолучитьСтроку(7);
		ТекстовыйДокумент.ВставитьСтроку(70, Стр);
		ТекстовыйДокумент.УдалитьСтроку(7);
	КонецЦикла;
	ТекстовыйДокумент.Записать(ПолноеИмя, КодировкаТекста.UTF8);
	git.add(ИмяФайла);
	
	ИмяФайла = "Example/Forms/Form.xml";
	КопироватьФайл(ТекущийКаталог + ИмяФайла, ВременнаяПапка + ИмяФайла);
	
	ИмяФайла = "Example/Forms/Test.xml";
	КопироватьФайл(ТекущийКаталог + ИмяФайла, ВременнаяПапка + ИмяФайла);
	git.add(ИмяФайла);
	
	ИмяФайла = "Example/Forms/Test/Ext/Form/Module.bsl";
	КопироватьФайл(ТекущийКаталог + ИмяФайла, ВременнаяПапка + ИмяФайла);
	git.add(ИмяФайла);
	
	ИмяФайла = "src/AddInNative.cpp";
	ПолноеИмя = ВременнаяПапка + ИмяФайла;
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ПолноеИмя, КодировкаТекста.UTF8);
	ТекстовыйДокумент.ВставитьСтроку(3, "// " + ЧислоПрописью(51243, "L=en_US"));
	ТекстовыйДокумент.ВставитьСтроку(4, "// " + ЧислоПрописью(24565, "L=en_US"));
	ТекстовыйДокумент.ВставитьСтроку(5, "");
	ТекстовыйДокумент.Записать(ПолноеИмя, КодировкаТекста.UTF8);
	git.add(ИмяФайла);
	
	head = git.head;
	branches = git.branches;
	
КонецПроцедуры